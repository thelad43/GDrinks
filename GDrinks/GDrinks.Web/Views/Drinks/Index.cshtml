@model DrinksListingViewModel

@{
    ViewData["Title"] = "Index";
}

<br />
<br />

@if (Model.Search != null && !string.IsNullOrEmpty(Model.Search))
{
<p>
    <h4 class="bg-info" style="font-size:40px">Search results for '@Model.Search'</h4>
</p>
}

<div class="row marginTop">
    @foreach (var drink in Model.Drinks)
    {
        <partial name="_DrinkSummaryPartial" model="@drink"></partial>
    }
</div>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-area="" asp-controller="Drinks" asp-action="Index" asp-route-id="@Model.PreviousPage" asp-route-category="@Model.Category" asp-route-search="@Model.Search" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            const int MorePagesToShow = 3;

            var pagesToShow = new List<int>();

            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }

            for (var i = Model.CurrentPage - MorePagesToShow; i <= Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            for (var i = Model.PagesCount - MorePagesToShow + 1; i <= Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            pagesToShow = pagesToShow
                .Where(x => x <= Model.PagesCount)
                .Distinct()
                .OrderBy(x => x)
                .ToList();
        }

        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];

            if (pageNumber == Model.CurrentPage)
            {
                className = "active";
            }

            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link" asp-area="" asp-controller="Drinks" asp-action="Index" asp-route-id="@(pagesToShow[i - 1] + 1)" asp-route-category="@Model.Category" asp-route-search="@Model.Search">...</a></li>
            }

            <li class="page-item @className"><a class="page-link" asp-area="" asp-controller="Drinks" asp-action="Index" asp-route-id="@pageNumber" asp-route-category="@Model.Category" asp-route-search="@Model.Search">@pageNumber</a></li>
        }

        @if (Model.CurrentPage < Model.PagesCount)
        {
            <li class="page-item">
                <a class="page-link" asp-area="" asp-controller="Drinks" asp-action="Index" asp-route-id="@Model.NextPage" asp-route-category="@Model.Category" asp-route-search="@Model.Search" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>