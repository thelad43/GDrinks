@model OrdersListingViewModel

@{
    ViewData["Title"] = "All Orders";
}

<h2>@ViewData["Title"]</h2>

<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th scope="col"># Order ID</th>
            <th scope="col">Country</th>
            <th scope="col">Zip Code</th>
            <th scope="col">Address Line</th>
            <th scope="col">Ordered On</th>
            <th scope="col">User</th>
            <th scope="col">Items</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Orders)
        {
        <tr>
            <th scope="row">@order.Id</th>
            <td>@order.Country</td>
            <td>@order.ZipCode</td>
            <td>@order.AddressLine</td>
            <td>@order.OrderedOn</td>
            <td>@order.User</td>
            <td><a asp-area="Admin" asp-controller="Orders" asp-action="Items" asp-route-id="@order.Id" class="btn btn-sm btn-primary">Items</a></td>
        </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-area="Admin" asp-controller="Orders" asp-action="Index" asp-route-id="@Model.PreviousPage" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            const int MorePagesToShow = 3;

            var pagesToShow = new List<int>();

            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }

            for (var i = Model.CurrentPage - MorePagesToShow; i <= Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            for (var i = Model.PagesCount - MorePagesToShow + 1; i <= Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            pagesToShow = pagesToShow
                .Where(x => x <= Model.PagesCount)
                .Distinct()
                .OrderBy(x => x)
                .ToList();
        }

        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];

            if (pageNumber == Model.CurrentPage)
            {
                className = "active";
            }

            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link" asp-area="Admin" asp-controller="Orders" asp-action="Index" asp-route-id="@(pagesToShow[i - 1] + 1)">...</a></li>
            }

            <li class="page-item @className"><a class="page-link" asp-area="Admin" asp-controller="Orders" asp-action="Index" asp-route-id="@pageNumber">@pageNumber</a></li>
        }

        @if (Model.CurrentPage < Model.PagesCount)
        {
            <li class="page-item">
                <a class="page-link" asp-area="Admin" asp-controller="Orders" asp-action="Index" asp-route-id="@Model.NextPage" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>